{% macro renderItem(category, recursive, isCheckable) %}
{% set isCheckable = isCheckable and category.useForFiltering %}
<div class="category-wrapper">

	{# ---- CATEGORY TITLE IF REQUIRED ----- #}
	{% if category.displayInMenu %}
	<li class="subcategory-item {{  'expanded' if category.showExpanded else '' }} {{ 'unexpandable' if category.unexpandable }} {{ 'uncheckable' if not isCheckable }}" id="category-{{category.id}}">

		{# --- NAME--- #}
		<div class="name-wrapper {{ 'tooltipped' if not category.unexpandable }}" data-category-id='{{ category.id }}' data-position="right" data-delay="400" data-tooltip="Afficher/Masquer le détail" >		
			<span class="name">{{ category.nameShort }}</span>
			{% if not category.unexpandable %}<div class="arrow-after"></div>	{% endif %}
		</div>

		{% if isCheckable %}
			{# --- CHECKBOX ---- #}
			<div class="checkbox-wrapper" data-category-id='{{ category.id }}'>
				<div class="checkbox-container">
			      <input type="checkbox" class="subcategorie-checkbox filled-in" id="subcategorie-checkbox-{{ category.id }}" checked="checked" data-category-id='{{ category.id }}'/>
			      <label for="subcategorie-checkbox-{{ category.id }}"></label>
				</div>
			</div>
		{% endif %}
	</li>
	{% endif %}

	{# ---- CATEGORY LIST OPTIONS ----- #}
	<div class="options-wrapper" {% if not category.showExpanded %} style="display:none"{% endif %}>
		{% for option in category.options %} 

			{% set isSubcategories = recursive and option.subcategories|length and option.displayChildrenInMenu %}

	    <li class="subcategorie-option-item row checked
	    					{{ 'option-collapsible' if isSubcategories}} {{ 'expanded' if option.showExpanded }} 
	    					{{ 'unexpandable' if option.unexpandable }}
	    					{{ 'tooltipped' if option.textHelper }}    
	    					{{ 'uncheckable' if not isCheckable }}"					  		
	    		id="option-{{ option.id }}" data-option-id='{{ option.id }}'
	    		data-position="right" data-delay="700" data-tooltip="{{ option.textHelper | capitalize }}"
	    		{% if not option.displayInMenu %} style="display:none"{% endif %}>
	    	
	    		{# --- ICON & NAME--- #}
	    		<div class="gogo-icon-name-wrapper" data-option-id='{{ option.id }}'>

						{# --- ICON ---- #}
						{% set iconClass = option.icon if option.icon else ( 'gogo-icon-marker' if option.useColorForMarker else '') %}	
						{% if iconClass %}    
							<span class="icon {{ iconClass }} colorAs" option-id='{{ option.id }}' ></span>
						{% endif %}

						{# --- NAME ---- #}
						<span class="option-name">
							{{ option.nameShort if option.nameShort else option.name }}
							{# --- ARROW COLAPSIBLE ---- #}
							{% if isSubcategories and not option.unexpandable %}<div class="arrow-after"></div>{% endif %}
						</span> 					
						
					</div>				

					{% if isCheckable %}
						{# --- CHECKBOX ---- #}
						<div class="checkbox-wrapper" data-option-id='{{ option.id }}' >
							<div class="checkbox-container">
							  <input type="checkbox" class="subcategorie-option-checkbox {{ 'tooltipped' if isSubcategories }}" 
							  id="option-checkbox-{{ option.id }}" {% if isSubcategories %} data-position="right" data-delay="400" data-tooltip="Cocher/Décocher tout"{% endif %}/>
							  <label class="gogo-h-primary" for="option-checkbox-{{ option.id }}"></label>
							</div>
						</div>
					{% endif %}
	    </li>

	    {% if isSubcategories %}
	    	<div class="subcategories-wrapper {{ "" if option.displayInMenu else "no-withdrawal"}}" {% if not option.showExpanded%} style="display:none"{% endif %}>
		    {% for subcategory in option.subcategories %}
		    		{{ renderItem(subcategory, true, isCheckable) }}
				{% endfor %} 
				</div>
			{% endif %}

		 {% endfor %} {# for option in category.options #}
	 </div>

 </div>
{% endmacro %}